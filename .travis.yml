os: linux
dist: xenial
language: java
jdk: openjdk11

addons:
  firefox: "83.0"

git:
  depth: false
  quiet: true

services:
  - xvfb
  - docker

import:
  - Alfresco/alfresco-process-tools:.travis.kubernetes_install.yml@master
  - Alfresco/alfresco-process-tools:.travis.helm_install.yml@master

cache:
  directories:
    - $HOME/.m2
# the cache can grow constantly
before_cache:
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-share*
  - rm -rf $HOME/.m2/repository/org/alfresco/share*
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-content-services-share-*
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-wcmqs*

branches:
  only:
    - master
    - develop
    - /^SP\/.+$/
    - /.*\/APPS-.*$/

env:
  global:
    - REPO_TAG_NAME=7.0.0-A16
    - SHARE_TAG_NAME=latest
    # Release version has to start with real version (7.0.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=7.0.0-A14
    - DEVELOPMENT_VERSION=7.0.0-SNAPSHOT
    - HOSTED_ZONE=dev.alfresco.me
    - KEEP_ENV=false

stages:
  - build
  - deploy
  - wait
  - tests
  - tearDown
  - release
  - company_release

before_install:
  - |
    pip install --upgrade awscli
    curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator
    curl -o aws-iam-authenticator.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator.sha256
    openssl sha1 -sha256 aws-iam-authenticator
    chmod +x ./aws-iam-authenticator
    mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
    export PATH=$PATH:$HOME/bin
    aws eks update-kubeconfig --name appsTeam --region=eu-west-1

jobs:
  include:
    - name: "Build and Test"
      stage: build
      before_install: bash _ci/init.sh
      script: bash _ci/build.sh

#    - name: "White Source"
#      stage: build
#      # only on SP branches or master and if it is not a PR
#      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
#      before_install: bash _ci/init.sh
#      script: travis_wait 30 bash _ci/whitesource.sh _ci/.wss-unified-agent.config

#    - name: "Source Clear Scan (SCA)"
#      stage: build
#      # only on SP branches or master and if it is not a PR
#      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
#      before_install: bash _ci/init.sh
#      # Run Veracode
#      install: skip
#      script: travis_wait 30 bash _ci/source_clear.sh

#    - name: "Deploy on K8s"
#      stage: deploy
#      install: skip
#      script: bash _ci/deploy_k8s.sh

#    - &test-staging
#      name: "Admin Tools Tests"
#      stage: tests
#      jdk: openjdk11
#      if: fork=false AND commit_message !~ /\[trigger company release|skip tests\]/
#      before_install: bash _ci/init.sh
#      install: skip
#      script:
#        - bash _ci/execute_share_web.sh "admin-tools-tests.xml"
#      addons:
#        artifacts:
#            paths:
#              - alfresco-tas-share-test/target/surefire-reports
#              - alfresco-tas-share-test/target/reports
#            target_paths: $TRAVIS_BUILD_NUMBER

#    - <<: *test-staging
#      name: "User and Authentication Tests"
#      script: bash _ci/execute_share_web.sh "user-tests.xml"
#
#    - <<: *test-staging
#      name: "Content Tests"
#      script: bash _ci/execute_share_web.sh "content-tests.xml"
#
#    - name: "Delete environment"
#      stage: tearDown
#      install: skip
#      script: bash _ci/delete-env.sh
#
#    - name: "Release"
#      stage: release
#      if: fork=false AND commit_message =~ /\[release\]/ AND branch =~ /(master|develop|SP\/.+|HF\/.+)$/
#      before_install: bash _ci/init_tag.sh
#      script: travis_wait 30 _ci/maven_release.sh
#
#    - name: "Company Release"
#      stage: company_release
#      if: fork=false AND commit_message =~ /\[trigger company release\]/ AND branch =~ /(master|SP\/.+|HF\/.+)$/
#      before_install: bash _ci/init_tag.sh
#      script: travis_wait 30 _ci/company-release.sh

notifications:
  slack:
    - rooms:
        - secure: "WlmKspZXlP4qnNXti2XLwc1vbF8NUeHWCoHEXUcWdMTF2w7tldVGNcF6yNXay8GpfKFDoMk0o11ZNwWJxbvy1C8JhEsrhRnmVVOt2LMx3Ps+ReFjWKwcMg3nIB1evqCgIMl1GYNyAL8Ruawpz6sNqw3VXfLSirlsUomMT7IMY3XctASdEaZnOrDDfsvCKdDG3gVAbU/VNJyH/1W1IMiNR+7So8zq4nRDND+jhDSSB6KNOdfeVS2eUfciTlL/KyK5RqU8ScnvNtMrZC3uUjrrk6j142+OlV4hruX5X6hq38gIG/NPJzC6I1FEQ/LiPBt80gh2RL0rwC4/qPyNyBqPrycwvHyInzaeWNiVVt7HVVaoPLcvXOTygRriMgsfOzrMCVFcpDnHhAh9TDxSh5K264CiXULWFG4mlfNkqIaJkZ+eGJn0OUDk03eNIHTXVHWKFw4LQKfXmxtn7aY31btmg7xpTdNks1MuxqR+wzDWJgKf/WIgnYq1z9iETVciSxMUfoXwO+Gd2ZSWrh4Igcva8c3Zq2WIxZGqM3SJJnsv23QjOvWPJRZTHOdJdhm4DS2vDvwIv8zeXep7bB6uFgnyjeWCYkQ9e5JsFjgf1ZgBHcMpAYgts4U47WqqAng2zecW3zLL7j1Xi5XOzDJLdlxUkF2Gvc/n3cap2wljdMVSaHE="
      on_success: always
      on_failure: always
      on_pull_requests: false
      template:
        - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} by %{author} %{result} in %{duration}"

    - rooms:
        - secure: "ki0MCQMCREU62BH4dGElozATxt36rSL41YJdlTtk15vUA32dwEcCHadVmtG/QLWPUwa45jK7UIf+qJriubzlMMF7Pxpuo6xBye30WMSw4T+5c9NvVzjwjL9ZLPHIhypmxMS1ffAEPog4HHdiHI16I4bw1IS4wjtVMF4kRiqhJUY/voX/IqGImBveGhngw8nrxt+1RstcL9i9VTXSFq0sfHs75J8nbidg6v+PzbmEFoLHcI5Dzk7Nj049HgLh7vFdljMs/CxOnVo6sew92WRnkuRMDq8qlqSyfZpGaAHlidoIYU3lztWzYl474XjWZzxdv00EvIJ/hwL3CLZ7o2Eh4qRUjfmV6js3iRvHwPE9w4zT1En1ffInYQ+8MTtyhppb4E0EYqu5uPhcyYzS1UKt3jxinZFPpAfkG4IluaBw1lQ2gEymTL9ocdiNuwb6HgJcowisH353kfhAA7987kBA416vMtxvXMy+w8or/jKa6KqomdpyEQedf+amzDZ9izB8yAq0PPwZGcc7S4yNncCsCObRKWBZO+8oICD2d+jRf3lSByIW6KerefUItiaDf9ZTSHfRbij4ax7x+bJ4tORF0YGTt4lHv8YpsqsxhIcl2uxibwhKWYSd4ezdzovsaCId8/k/e3fP76laAP8gbQTofrksXhRnUN+qX4ihmiWk1i8="
        # if: fork=false AND commit_message =~ /\[release\]/ AND branch =~ /(master|develop|SP\/.+|HF\/.+)$/
      on_success: always
      on_failure: always
      on_pull_requests: false
      template:
        - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} by %{author} %{result} in %{duration}"