os: linux
dist: xenial
language: java
jdk: openjdk11

addons:
  firefox: "83.0"

git:
  depth: false
  quiet: true

services:
  - xvfb
  - docker

import:
  - Alfresco/alfresco-process-tools:.travis.kubernetes_install.yml@master
  - Alfresco/alfresco-process-tools:.travis.helm_install.yml@master

cache:
  directories:
    - $HOME/.m2
# the cache can grow constantly
before_cache:
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-share*
  - rm -rf $HOME/.m2/repository/org/alfresco/share*
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-content-services-share-*
  - rm -rf $HOME/.m2/repository/org/alfresco/alfresco-wcmqs*

branches:
  only:
    - master
    - develop
    - /^SP\/.+$/
    - /.*\/APPS-.*$/

env:
  global:
    - REPO_TAG_NAME=7.0.0-A16
    - SHARE_TAG_NAME=latest
    # Release version has to start with real version (7.0.0-....) for the docker image to build successfully.
    - RELEASE_VERSION=7.0.0-A14
    - DEVELOPMENT_VERSION=7.0.0-SNAPSHOT
    - HOSTED_ZONE=dev.alfresco.me
    - KEEP_ENV=false

stages:
  - build
  - deploy
  - wait
  - tests
  - tearDown
  - release
  - company_release

before_install:
  - |
    pip install --upgrade awscli
    curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator
    curl -o aws-iam-authenticator.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator.sha256
    openssl sha1 -sha256 aws-iam-authenticator
    chmod +x ./aws-iam-authenticator
    mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
    export PATH=$PATH:$HOME/bin
    aws eks update-kubeconfig --name appsTeam --region=eu-west-1

jobs:
  include:
    - name: "Build and Test"
      stage: build
      before_install: bash _ci/init.sh
      script: bash _ci/build.sh

    - name: "White Source"
      stage: build
      # only on SP branches or master and if it is not a PR
      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
      before_install: bash _ci/init.sh
      script: travis_wait 30 bash _ci/whitesource.sh _ci/.wss-unified-agent.config

    - name: "Source Clear Scan (SCA)"
      stage: build
      # only on SP branches or master and if it is not a PR
      if: fork = false AND (branch = develop OR branch =~ /support\/SP\/.*/ OR branch =~ /.*\/APPS-.*$/) AND type != pull_request
      before_install: bash _ci/init.sh
      # Run Veracode
      install: skip
      script: travis_wait 30 bash _ci/source_clear.sh

    - name: "Deploy on K8s"
      stage: deploy
      install: skip
      script: bash _ci/deploy_k8s.sh

    - &test-staging
      name: "Admin Tools Tests"
      stage: tests
      jdk: openjdk11
      if: fork=false AND commit_message !~ /\[trigger company release|skip tests\]/
      before_install: bash _ci/init.sh
      install: skip
      script:
        - bash _ci/execute_share_web.sh "admin-tools-tests.xml"
      addons:
        artifacts:
            paths:
              - alfresco-tas-share-test/target/surefire-reports
              - alfresco-tas-share-test/target/reports
            target_paths: $TRAVIS_BUILD_NUMBER

    - <<: *test-staging
      name: "User and Authentication Tests"
      script: bash _ci/execute_share_web.sh "user-tests.xml"

    - <<: *test-staging
      name: "Content Tests"
      script: bash _ci/execute_share_web.sh "content-tests.xml"

    - name: "Delete environment"
      stage: tearDown
      install: skip
      script: bash _ci/delete-env.sh

    - name: "Release"
      stage: release
      if: fork=false AND commit_message =~ /\[release\]/ AND branch =~ /(master|develop|SP\/.+|HF\/.+)$/
      before_install: bash _ci/init_tag.sh
      script: travis_wait 30 _ci/maven_release.sh

    - name: "Company Release"
      stage: company_release
      if: fork=false AND commit_message =~ /\[trigger company release\]/ AND branch =~ /(master|SP\/.+|HF\/.+)$/
      before_install: bash _ci/init_tag.sh
      script: travis_wait 30 _ci/company-release.sh

notifications:
  slack:
    rooms:
      secure: "bU30OZYm/ueiQaRWRsLSSiYPmhNoMc8Q7g08GNSIJ0ru2A3lXUzALUxhsJT3EVkrWeJTvx0I4vUj6vQP55Fkimeyq5/qT1cqRSjRCmn19CiNeVlYZZ8hB1QL6iaQOAK39VgQ0nKqQBMcxy/rXTtWafiBba63hE1rQCt/uT/9mLi8JijdHEDzH35rM+xy8jJOC9lCyuuxb/oI8/gqgXGYc9t2sfZ5+cYsLuccDhkeNjJggMHqBggqGDKpw562E7hNSJtid/sv5tLjaHXMUmu6iRr+NfPGW3dt/hP48O92hMxW+YuDoq/53GKdJq87/pxK5kLGjmnKNvagtbPoEBiBXTdNaZjNDmVbqrH8j8gFC27Xq6zcSJV9gUYh/orjPHe+ZNnTfyBZsuTEbCSpGE0XMHWZKUblCH4mY9xVcIlWM7xxCAMI4o5LVALHx+2joxeO5AuWYnjJnVdnLIkCYle8icToF9sKniC1dAoBmprDFIJQxLP6LdaJQouV0FaMPo+oZQKUMcAJSTa5SqNvBXvY71TVTwGgRpbMa+cPfWWDgGsHCi8OVcgLqhkTXBkWKZ5+hbD0SyKLgo7QO8o21ZijClGsIvnwmK2slk+Nrx/C5TN92IEKt3IVtvoNAMM2qJRdEY64T4oLup3FmYnsaCYFarPNO/y8krTiMR18ui8T+7Y="
    on_success: always
    on_failure: always
    on_pull_requests: true
    template:
      - "Build <%{build_url}|#%{build_number}> (<%{compare_url}|%{commit}>) of %{repository_slug}@%{branch} by %{author} %{result} in %{duration}"